/* Copyright (c) Hancom. All rights reserved. */
/* Licensed under the MIT License. See License.txt in the project root for license information. */

/* -----------------------
** submenu button.
** 오른쪽 expander는 javascript 코드에서 일괄 추가함.
** css의 :after선택자로 추가할 수는 있으나, 이경우 class 지정이 안되서 비활성처리 코드를 javascript 내에서 해야 하므로 오히려 더 번거로워 짐
-------------------------- */
.hnc-submenu {
    display: block;
    position: absolute; /* display = none 이 아니기에 화면 크기에 관여하게 된다. 그래서 버튼에서 하위메뉴가 있으면 전체 브라우저에 스크롤이 나타날 수 있음. */
    text-align: left;

    opacity: 0; /* click시나 menuItem hover시 코드내에서 동적으로 submenu 표시. display로 처리하면 즉시 사라지거나 나타나 사용성이 떨어짐. */
    pointer-events: none; /* 마우스 이벤트는 opacity가 1일때 받음 */

    border-color:var(hnc-control-submenu-border-color);
    box-shadow: var(--hnc-control-submenu-box-shadow); /* offset x, offiset y, radius, color */

}
.hnc-submenu-button > .hnc-submenu {
    margin: 4px 0px 0px 0px; /* 위, 오른쪽, 아래, 왼쪽 - 버튼과의 공간 추가 */
}
.hnc-submenu-item > .hnc-submenu {
    position: fixed; /* absolute를 사용하면 하위 메뉴의 너비가 상위 메뉴 크기로 줄어드는 현상이 있고, 또한 display = none 이 아니기에 화면 크기에 관여하게 됨. */
    transition-delay: 300ms; /* 버튼 클릭시에는 바로 표시되나 submenu item 하위로 표시될 땐 한탬포 쉬고 표시 / 숨기기 */
}
.hnc-submenu-item:hover > .hnc-submenu {
    opacity: 1!important; /* 기본 opacity를 조정하여 표시 */
    pointer-events: auto!important;
}
.hnc-control:hover > .hnc-submenu {
    background-color: var(--hnc-control-background-color); /* menu 는 hover 하더라도 활성화 표시를 하지 않음 */
    border-color: var(--hnc-control-submenu-border-color);
}
/* -----------------------
** menu item
-------------------------- */
.hnc-menu-item,
.hnc-submenu-item {
    display: block; /* 각 menu-item은 개행되어야 함 */
    padding-left: 28px; /* icon이 있는 경우 왼쪽 영역 */
    padding-right: 12px; /* 우측 expander 표시 영역 */
    font-size: var(--hnc-control-font-size); /* li 태그에 직접 content를 작성한 경우 hnc-container의 영향으로 글꼴 0으로 나오는 경우가 있어 크기지정 */
    border-color: transparent; /* hnc-control의 기본 테두리 색상 제거 */
}